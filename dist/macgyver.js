/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("lodash"));
	else if(typeof define === 'function' && define.amd)
		define(["lodash"], factory);
	else {
		var a = typeof exports === 'object' ? factory(require("lodash")) : factory(root["_"]);
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function(__WEBPACK_EXTERNAL_MODULE_lodash__) {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/macgyver.js":
/*!*************************!*\
  !*** ./src/macgyver.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ \"lodash\");\n/* harmony import */ var sift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sift */ \"./node_modules/sift/es5m/index.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _this2 = undefined;\n\nfunction _wrapRegExp(re, groups) { _wrapRegExp = function _wrapRegExp(re, groups) { return new BabelRegExp(re, undefined, groups); }; var _RegExp = _wrapNativeSuper(RegExp); var _super = RegExp.prototype; var _groups = new WeakMap(); function BabelRegExp(re, flags, groups) { var _this = _RegExp.call(this, re, flags); _groups.set(_this, groups || _groups.get(re)); return _this; } _inherits(BabelRegExp, _RegExp); BabelRegExp.prototype.exec = function (str) { var result = _super.exec.call(this, str); if (result) result.groups = buildGroups(result, this); return result; }; BabelRegExp.prototype[Symbol.replace] = function (str, substitution) { if (typeof substitution === \"string\") { var groups = _groups.get(this); return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) { return \"$\" + groups[name]; })); } else if (typeof substitution === \"function\") { var _this = this; return _super[Symbol.replace].call(this, str, function () { var args = []; args.push.apply(args, arguments); if (_typeof(args[args.length - 1]) !== \"object\") { args.push(buildGroups(args, _this)); } return substitution.apply(this, args); }); } else { return _super[Symbol.replace].call(this, str, substitution); } }; function buildGroups(result, re) { var g = _groups.get(re); return Object.keys(g).reduce(function (groups, name) { groups[name] = result[g[name]]; return groups; }, Object.create(null)); } return _wrapRegExp.apply(this, arguments); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n* Shared front-end / back-end MacGyver utilities\n* For Vue specific utilities see ./macgyver.vue\n*/\n\n\nvar $macgyver = {};\n/**\n* Storage for all MacGyver registered widgets\n* Each key is the unique reference name of the component e.g. `\"mgText\"`\n* Each value is the original options object definition passed to `Vue.mgCompoenent(name, options)`\n* @var {Object}\n*/\n\n$macgyver.widgets = {};\n$macgyver.$nextId = 0;\n\n$macgyver.nextId = function () {\n  return \"mgForm\".concat($macgyver.$nextId++);\n};\n/**\n* Set of convenience functions to manage on-screen MacGyver forms\n*/\n\n\n$macgyver.forms = {};\n/**\n* Set the given forms spec config\n* @param {string} id The ID of the form to set the config of\n* @param {Object|Array} config The config to set\n* @returns {MacGyver} The chainable MacGyver instance\n*/\n\n$macgyver.forms.setConfig = function (id, config) {\n  if (!$macgyver.$forms[id]) $macgyver.$forms[id] = {\n    config: {},\n    data: {}\n  };\n  $macgyver.$forms[id].config = $macgyver.compileSpec(config).spec;\n  return $macgyver;\n};\n/**\n* Set the given forms spec data\n* @param {string} id The ID of the form to set the config of\n* @param {Object|Array} data The data population to set\n* @returns {MacGyver} The chainable MacGyver instance\n*/\n\n\n$macgyver.forms.setData = function (id, data) {\n  if (!$macgyver.$forms[id]) $macgyver.$forms[id] = {\n    config: {},\n    data: {}\n  };\n  $macgyver.$forms[id].data = data;\n  return $macgyver;\n};\n/**\n* Convenience function to validate all MacGyver forms on a screen and return the array of failed validations\n* @param {string} [id] The form ID to validate, if omitted the first form on the page is used\n* @param {boolean} [showErrors=true] Allow the form to display a list of errors as well as returning them\n* @returns {array <Object>} Collection where each item is {error}\n*/\n\n\n$macgyver.forms.validate = function (id) {\n  var showErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (!$macgyver.$forms[id]) throw new Error('Invalid MacGyver form');\n  console.warn('FIXME: Validation not yet supported');\n  var responses = []; // FIXME: This needs to work internally using flatten()\n\n  return true;\n};\n/**\n* Emit a message to a specific mgForm element\n* @param {string} id The ID of the form to emit to\n* @param {string} msg The message to emit\n* @param {*} [payload...] The payload of the message to emit\n*/\n\n\n$macgyver.forms.emit = function (id, msg) {\n  var _$macgyver$$forms$id;\n\n  if (!$macgyver.$forms[id]) throw new Error('Unknown form ID');\n\n  for (var _len = arguments.length, payload = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    payload[_key - 2] = arguments[_key];\n  }\n\n  (_$macgyver$$forms$id = $macgyver.$forms[id]).$emit.apply(_$macgyver$$forms$id, [msg].concat(payload));\n};\n/**\n* Emit a message to all child controls of a given form\n* @param {string} id The ID of the form to emit to\n* @param {string} msg The message to emit\n* @param {*} [payload...] The payload of the message to emit\n*/\n\n\n$macgyver.forms.emitDown = function (id, msg) {\n  var _$macgyver$$forms$id2;\n\n  if (!$macgyver.$forms[id]) throw new Error('Unknown form ID');\n\n  for (var _len2 = arguments.length, payload = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    payload[_key2 - 2] = arguments[_key2];\n  }\n\n  (_$macgyver$$forms$id2 = $macgyver.$forms[id]).$emitDown.apply(_$macgyver$$forms$id2, [msg].concat(payload));\n};\n\n$macgyver.forms.getPath = function (id, path, fallback) {\n  return $macgyver.utils.getPath($macgyver.$forms[id], path, fallback);\n};\n/**\n* Compute the data prototype of the form\n* This is an empty object with all the defaults populated\n* @param {Object} spec The form spec object to exmaine\n* @returns {Object} A prototype data object with all defaults populated\n*/\n\n\n$macgyver.forms.getPrototype = function (spec) {\n  return $macgyver.flatten(spec, {\n    type: 'spec',\n    want: 'array',\n    wantDataPath: true\n  }).reduce(function (data, node) {\n    if (!node.path || !node.default) return data; // No path or default speciifed - skip\n\n    $macgyver.utils.setPath(data, node.path, node.default);\n    return data;\n  }, {});\n}; // $macgyver.notify{} {{{\n\n/**\n* A collection of ways MacGyver can notify the user\n* These should be replaced by whatever your local framework supports\n*/\n\n\n$macgyver.notify = {};\n/**\n* Signify that a loading event is taking place\n* This function should be overridden by the framework to include whatever load handling is requried\n* By default it uses https://www.npmjs.com/package/@momsfriendlydevco/loader\n* @param {string} id The unique ID for the loading item\n* @param {boolean} [status=true] Whether the item is performing an operation that requires loading\n* @param {Object} [options] Additional options\n* @param {boolean} [options.foreground=false] Whether the loading event should occur in the foreground\n*/\n\n$macgyver.notify.loading = function (id) {\n  var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (status && options && options.foreground) {\n    console.log('[$macgyver]', 'Loading foreground', id, {\n      status: status\n    });\n  } else if (status) {\n    console.log('[$macgyver]', 'Loading background', id, {\n      status: status\n    });\n  } else {\n    console.log('[$macgyver]', 'Stop loading', id, {\n      status: status\n    });\n  }\n};\n/**\n* Provide a warning message to the user\n* @param {string} message The message to display\n*/\n\n\n$macgyver.notify.warn = function (message) {\n  return console.log('[$macgyver]', 'WARN', message);\n};\n/**\n* Provide an error message to the user\n* @param {string} message The message to display\n*/\n\n\n$macgyver.notify.error = function (message) {\n  return console.log('[$macgyver]', message);\n}; // }}}\n\n/**\n* Flatten the a spec into an object lookup where each key is the dotted notation of the key\n* NOTE: Specifying {want:'array'} will add the extra property 'path' onto the output collection\n* @param {Object|array} root The data or spec object to examine, this should be the root object but can also convert arrays into objects on the fly (although this is slower)\n* @param {Object} [options] Optional settings to use\n* @param {number} [options.maxDepth=0] How far down the tree to recurse, set to falsy to infinitely recurse\n* @param {Object|function} [options.filter] Either a Lodash match expression or a function to run on each widget - only truthy values are appended to the output. Function is called as `(widget, dataPath, specPath, depth)`\n* @param {Object|function} [options.filterChildren] Either a Lodash match expression or a function to run on each widget - only truthy values are recursed into. Function is called as `(widget, dataPath, specPath, depth)`\n* @param {string} [type=\"auto\"] How to recurse into items. ENUM: 'auto' (try to determine how to recurse from root element), 'spec', 'data'\n* @param {string} [want=\"object\"] How to return the output. ENUM: 'object' (an object where each key is the path and the value is the object), 'array' (a flattened version of an object), object is faster\n* @param {boolean|string} [wantDataPath=false] Whether to mutate the output widget with a dotted notation string indicating where to look in a data object for the value of the widget, if this is a string it specifies the key to use as storage\n* @param {boolean} [wantSpec=false] Whether to mutate the output widget with the widget specification as an object for each item\n* @param {boolean|string} [wantSpecPath=false] Whether to mutate the output widget with a dotted notation path on where to find the widget within a spec object, if this is a string it specifies the key to use as storage\n*/\n\n\n$macgyver.flatten = function (root, options) {\n  var settings = lodash__WEBPACK_IMPORTED_MODULE_0__.defaults(options, {\n    root: lodash__WEBPACK_IMPORTED_MODULE_0__.isArray(root) ? $macgyver.compileSpec(root).spec : root,\n    maxDepth: 0,\n    filter: undefined,\n    filterChildren: undefined,\n    type: 'auto',\n    want: 'object',\n    wantDataPath: false,\n    wantSpec: false,\n    wantSpecPath: false\n  });\n\n  if (settings.filter && !lodash__WEBPACK_IMPORTED_MODULE_0__.isFunction(settings.filter) && lodash__WEBPACK_IMPORTED_MODULE_0__.isObject(settings.filter)) settings.filter = lodash__WEBPACK_IMPORTED_MODULE_0__.matches(settings.filter);\n  if (settings.want != 'object' && settings.want != 'array') throw new Error('$macgyver.flatten({want}) can only be \"object\" or \"array\"');\n\n  if (settings.type == 'auto') {\n    if (settings.root && settings.root.items) {\n      settings.type = 'spec';\n    } else if (lodash__WEBPACK_IMPORTED_MODULE_0__.every(settings.root, function (k, v) {\n      return !v.items;\n    })) {\n      settings.type = 'data';\n    } else {\n      throw new Error('Cannot determine type of input object to $macgyver.flatten(), specify it explicitly with {type=spec|data}');\n    }\n  }\n\n  var found = settings.want == 'object' ? {} : [];\n\n  var depthScanner = function depthScanner(node, dataPath, specPath, depth) {\n    if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isObject(node)) return; // Add to bucket of found objects?\n\n    if (!settings.filter // No filter\n    || settings.filter.call(node, node, path, depth) // OR we pass the filter\n    ) {\n        if (settings.wantDataPath) node[lodash__WEBPACK_IMPORTED_MODULE_0__.isString(settings.wantDataPath) ? settings.wantDataPath : 'path'] = dataPath.concat([node.id]).filter(function (i) {\n          return i;\n        }).join('.');\n        if (settings.wantSpecPath) node[lodash__WEBPACK_IMPORTED_MODULE_0__.isString(settings.wantSpecPath) ? settings.wantSpecPath : 'specPath'] = specPath.join('.');\n\n        if (settings.want == 'object') {\n          if (node.id) found[node.id] = node;\n        } else {\n          found.push(node);\n        }\n      } // Recurse into children?\n\n\n    var recursionSubject = settings.type == 'spec' ? node.items : node;\n\n    if (lodash__WEBPACK_IMPORTED_MODULE_0__.isArray(recursionSubject) && (!settings.filterChildren // No filter\n    || settings.filterChildren.call(node, node, dataPath, specPath, depth) // ...or we pass the filter\n    ) && (!settings.maxDepth || depth <= settings.maxDepth)) {\n      recursionSubject.forEach(function (item, itemIndex) {\n        return depthScanner(item, dataPath, specPath.concat(settings.type == 'spec' ? ['items', itemIndex] : [itemIndex]), depth + 1);\n      });\n    }\n  };\n\n  depthScanner(settings.root, [], [], 0);\n  return found;\n};\n/**\n* Apply various criteria to a 'rough' spec to turn it into a clean one\n*\n* NOTE: 'Shorthand' is a simple `{id1: spec1, id2: spec2}` way of setting up a form. See the widget config for an example\n*       Shorthand may also have types that omit the `mg` prefix e.g. `text` instead of `mgText`\n*\n* @param {Object|array} spec A MacGyver spec to process and mutate\n* @param {Object} [options] Additional options to use\n* @param {boolean} [options.clone=true] Whether to clone the object before neatening, slow but Vue disallows mutation\n* @param {boolean} [options.convertArray=true] Convert arrays to object if not already in that format\n* @param {function} [options.convertArrayWrapper] Function used to convert from array - defaults to a simple mgContainer wrapper. Called as (spec)\n* @param {boolean} [options.convertShorthand=true] Accept shorthand format and convert if necessary\n* @param {function} [options.convertShorthandDetect] Function used to detect shorthand format - defaults to object with valid string keys sans 'id' field. Called as (spec)\n* @param {function} [options.convertShorthandTranslate] Function used to convert shorthand format. Called as (spec)\n* @param {boolean} [options.widgetDefaults=true] Assign each item its default values from the widget config if that setting is omitted\n* @param {string} [options.widgetTitles=true] Add any missing title fields from the ID\n* @param {boolean} [options.deblank=true] Reformat null/undefined/empty forms into a skeleton form\n* @returns {Object} An object composed of the keys {spec}\n*/\n\n\n$macgyver.compileSpec = function (spec, options) {\n  var settings = _objectSpread({\n    clone: true,\n    convertArray: true,\n    convertArrayWrapper: function convertArrayWrapper(items) {\n      return {\n        type: 'mgContainer',\n        showTitles: false,\n        items: items\n      };\n    },\n    convertShorthand: true,\n    convertShorthandDetect: function convertShorthandDetect(spec) {\n      return lodash__WEBPACK_IMPORTED_MODULE_0__.isPlainObject(spec) // Simple object\n      && !lodash__WEBPACK_IMPORTED_MODULE_0__.has(spec, 'type') // It doesn't have a type key (i.e. there is only one item in this object\n      && lodash__WEBPACK_IMPORTED_MODULE_0__.every(spec, function (v, k) {\n        return !lodash__WEBPACK_IMPORTED_MODULE_0__.has(v, 'id') && (!lodash__WEBPACK_IMPORTED_MODULE_0__.has(v, 'type') || v.type != 'mgContainer');\n      });\n    },\n    // Each item lacks an ID and either doesn't have a type or that type is not a container\n    convertShorthandTranslate: function convertShorthandTranslate(spec) {\n      return {\n        type: 'mgContainer',\n        items: lodash__WEBPACK_IMPORTED_MODULE_0__.map(spec, function (widget, id) {\n          var _widget$type;\n\n          if (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(widget)) widget = {\n            type: widget\n          }; // Widget is a straight string (e.g. 'boolean'), then fall through to type finders\n\n          if ((_widget$type = widget.type) !== null && _widget$type !== void 0 && _widget$type.startsWith('mg')) {\n            // Already a defined MacGyver spec\n            return widget;\n          } else if (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(id) && id.startsWith('mg')) {\n            // ID is type, payload is widget\n            return _objectSpread(_objectSpread({}, widget), {}, {\n              type: id\n            });\n          } else if (widget.type) {\n            // We have a type - try to match it against known widgets (or error out)\n            var typeLCase = widget.type.toLowerCase();\n\n            var found = lodash__WEBPACK_IMPORTED_MODULE_0__.find($macgyver.widgets, function (mgWidget) {\n              return (// Search for likely widgets\n                mgWidget.meta.id.substr(2).toLowerCase() == typeLCase // matches `mg${TYPE}`\n                || mgWidget.meta.shorthand.includes(typeLCase)\n              );\n            } // is included in shorthand alternatives\n            );\n\n            if (found) {\n              // Found either a widget of form `mg${type}` or a widget with that type as a shorthand\n              return _objectSpread(_objectSpread({\n                id: id\n              }, widget), {}, {\n                type: found.meta.id\n              });\n            } else {\n              // No idea what this widget is, wrap in an mgError\n              return {\n                type: 'mgError',\n                text: \"Unknown widget type \\\"\".concat(widget.type, \"\\\": \") + JSON.stringify(widget, null, '\\t')\n              };\n            }\n          } else if (lodash__WEBPACK_IMPORTED_MODULE_0__.isPlainObject(widget)) {\n            // Given object but it explicitly does not have a type - assume mgText\n            return _objectSpread(_objectSpread({\n              id: id\n            }, widget), {}, {\n              type: 'mgText'\n            });\n          } else {\n            // Can't determine any type to link against - error out\n            return {\n              type: 'mgError',\n              text: \"No widget type specified: \" + JSON.stringify(widget, null, '\\t')\n            };\n          }\n        })\n      };\n    },\n    widgetDefaults: true,\n    widgetTitles: true,\n    deblank: true\n  }, options);\n\n  var spec = settings.clone ? lodash__WEBPACK_IMPORTED_MODULE_0__.cloneDeep(spec) : spec; // Output spec\n\n  if (settings.deblank && lodash__WEBPACK_IMPORTED_MODULE_0__.isEmpty(spec)) {\n    // Convert empty or unusable values into a skeleton\n    spec = {\n      type: 'mgContainer',\n      items: []\n    };\n  }\n\n  if (settings.convertArray && lodash__WEBPACK_IMPORTED_MODULE_0__.isArray(spec)) {\n    // convert array spec -> object?\n    spec = settings.convertArrayWrapper(spec);\n  }\n\n  if (settings.convertShorthand && settings.convertShorthandDetect(spec)) {\n    // Is shorthand format\n    spec = settings.convertShorthandTranslate(spec);\n  }\n  /**\n  * Collection of items that have a showIf property\n  * @var {array<Object>} Each widget with a showIf property\n  */\n\n\n  var showIfs = [];\n  $macgyver.flatten(spec, {\n    type: 'spec',\n    want: 'array',\n    wantDataPath: '$dataPath',\n    wantSpecPath: '$specPath'\n  }).forEach(function (widget) {\n    if (!widget.type || !$macgyver.widgets[widget.type]) {\n      // Remap unknown widget (we already did shorthand remapping above so this should be a 1:1 match)\n      console.log(\"Unknown widget '\".concat(widget.type, \"'\"), widget);\n      widget = {\n        type: 'mgError',\n        text: \"Unknown widget type \\\"\".concat(widget.type, \"\\\": \") + JSON.stringify(widget)\n      };\n    } else if (settings.widgetDefaults) {\n      var _ref, _$macgyver$widgets$wi;\n\n      // Apply defaults to widget\n      Object.assign(widget, (_ref = (_$macgyver$widgets$wi = $macgyver.widgets[widget.type].config, lodash__WEBPACK_IMPORTED_MODULE_0__.pickBy(_$macgyver$widgets$wi, function (v, k) {\n        return !lodash__WEBPACK_IMPORTED_MODULE_0__.has(widget, k) && lodash__WEBPACK_IMPORTED_MODULE_0__.has(v, 'default');\n      })), lodash__WEBPACK_IMPORTED_MODULE_0__.mapValues(_ref, function (v) {\n        return v.default;\n      })));\n    } // Glue .show property to all elements that omit it\n\n\n    widget.show = widget.show == undefined ? true : !!widget.show; // Add all widgets with a .showIf expression into a quick-lookup collection\n\n    if (widget.showIf) {\n      widget.showIf = $macgyver.utils.evalCompile(widget.showIf); // Compile showIf property so its as fast as possible\n\n      showIfs.push(widget);\n    }\n\n    if (settings.widgetTitles && !widget.title && widget.id) widget.title = lodash__WEBPACK_IMPORTED_MODULE_0__.startCase(widget.id);\n  });\n  return {\n    spec: spec,\n    showIfs: showIfs\n  };\n};\n/**\n* Register of known forms to their Vue instance / plain object mapping\n* For front-end MacGyver this is the VueInstance object of the registered form\n* For the back-end this is a simple object of the form `{config, data}`\n* @var {VueInstance|Object>}\n* @property {Object} config The form spec\n* @property {Object} data The current form data\n*/\n\n\n$macgyver.$forms = {};\n/**\n* Set of misc utility helper functions\n* @var {Object};\n*/\n\n$macgyver.utils = {};\n/**\n* Local storage for the global object\n* This is a wrapper until `globalThis` becomes available in both Node and the browser\n* @var {Object} The global scope\n*/\n\n$macgyver.utils.global = function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n}();\n/**\n* Fetch any artbitrary data set from a URL\n* This function is designed to accept a customizable single-string URL which the user can customize and a spec options object that the requesting widget can define\n* NOTE: This function will invoke the loading notifier and call the warning notifier on an error\n*\n* @param {string} [url] The URL to fetch\n* @param {Object} options Additional options\n* @param {string} [options.url] Alternate way to pass the URL\n* @param {boolean} [options.type='object'] What data type to expect from the server. ENUM: 'object', 'array', 'raw'. If array and mappings are specified each member of the collection is mapped and an array returned\n* @param {function} [options.format] Data formatter, defaults to a simple passthrough. Called as `(output, session)`\n* @param {string|function} [options.formatError] Error thrown if the formatter fails, can be a string or function called as `(err)`. Defaults to 'Unable to format data feed from ${url} - ${err.toString()}`\n* @param {string} [options.from] The field from where to retrieve the value\n*\n* @param {Object <Object>} [options.mappings={}] Mappings to extract, each key is the mapping name with the value as an object containing the below spec\n* @param {boolean} [options.mappings.required=false] Whether the mapping is required\n*\n* @returns {Object} The extracted data object\n*\n* @example Fetch a simple collection\n* fetch('/api/datafeeds/random/users')\n*\n* @example Generate a random number as an object and return the extracted value as the promise response\n* fetch('/api/datafeeds/random/number?$extract=number', {mappings: {extract: {required: true}, format: d => d.extract}});\n*\n* @example Fetch a collection of items extracting both 'id' and 'title' fields\n* fetch('/api/datafeeds/random/users?$title=name&$id=_id', {mappings: {_id: {required: true}, title: {required: true}}})\n*/\n\n\n$macgyver.utils.fetch = function (url, options) {\n  return Promise.resolve() // Sanity checks {{{\n  .then(function () {\n    return $macgyver.$http || Promise.reject('No Axios compatible HTTP library - set $macgyver.$http to the library reference');\n  }) // }}}\n  // Injection options from URL {{{\n  .then(function () {\n    if (lodash__WEBPACK_IMPORTED_MODULE_0__.isPlainObject(url)) {\n      var _ref2 = [url.url, url];\n      url = _ref2[0];\n      options = _ref2[1];\n    } else {\n      options.url = url;\n    }\n\n    if (!url) throw new Error('Unknown URL to fetch');\n  }) // }}}\n  // Create the initial session {{{\n  .then(function () {\n    return {\n      mappings: {},\n      // Parsed mappings (either a copy of settings.mappings || extracted from the URL)\n      parsedUrl: new URL(url, window.location),\n      settings: _objectSpread({\n        type: 'object',\n        mappings: {},\n        // Optional mappings the user provided\n        format: function format(data, session) {\n          return data;\n        },\n        formatError: function formatError(err) {\n          return \"Unable to format data feed from \".concat(url, \" - \").concat(err.toString());\n        }\n      }, options)\n    };\n  }) // }}}\n  // Extract mappings from the URL string {{{\n  .then(function (session) {\n    if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isEmpty(options.mappings)) {\n      // Mappings are specified in options\n      session.mappings = options.mappings;\n    } else {\n      // Try to extract mappings if options doesn't already have a parsed set\n      Array.from(session.parsedUrl.searchParams.entries()).forEach(function (pair) {\n        var _pair = _slicedToArray(pair, 2),\n            k = _pair[0],\n            v = _pair[1];\n\n        if (k.startsWith('$')) {\n          session.mappings[k.substr(1)] = {\n            required: false,\n            from: v\n          };\n          session.parsedUrl.searchParams.delete(k);\n        }\n      });\n    }\n\n    return session;\n  }) // }}}\n  // Make the request {{{\n  .then(function (session) {\n    return $macgyver.$http.get(session.parsedUrl.toString()).then(function (res) {\n      return session.response = res;\n    }).then(function () {\n      return session;\n    });\n  }) // }}}\n  // Apply object cohersion + mappings {{{\n  .then(function (session) {\n    switch (session.settings.type) {\n      case 'array':\n        if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isArray(session.response.data)) throw \"Expected an array from data feed \\\"\".concat(url, \"\\\" but got a non-array\");\n\n        if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isEmpty(session.mappings)) {\n          session.output = session.response.data.map(function (item, itemIndex) {\n            return lodash__WEBPACK_IMPORTED_MODULE_0__.mapValues(session.mappings, function (v, k) {\n              if (v.required && item[v.from] === undefined) throw new Error(\"Required field \".concat(v.from, \" is not present in data feed for item #\").concat(itemIndex + 1));\n              return item[v.from];\n            });\n          });\n        } else {\n          session.output = session.response.data;\n        }\n\n        return session;\n\n      case 'object':\n        if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isPlainObject(session.response.data)) throw \"Expected object return from data feed \\\"\".concat(url, \"\\\" but got a non-plain-object\");\n\n        if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isEmpty(session.mappings)) {\n          session.output = lodash__WEBPACK_IMPORTED_MODULE_0__.mapValues(session.mappings, function (v, k) {\n            if (v.required && session.response.data[k] === undefined) throw new Error(\"Required field \".concat(k, \" is not present in data feed for item #\").concat(itemIndex + 1));\n            return session.response.data[v.from];\n          });\n        } else {\n          session.output = session.response.data;\n        }\n\n        return session;\n\n      case 'raw':\n        session.output = session.response.data;\n        return session;\n    }\n  }) // }}}\n  // Apply formatter {{{\n  .then(function (session) {\n    try {\n      return session.settings.format(session.output, session);\n    } catch (err) {\n      throw lodash__WEBPACK_IMPORTED_MODULE_0__.isString(session.settings.formatError) ? session.settings.formatError : session.settings.formatError(err);\n    }\n  }) // }}}\n  .catch(function (err) {\n    $macgyver.notify.error(err);\n    throw err;\n  }).finally(function () {\n    return $macgyver.notify.loading(url, false);\n  });\n};\n/**\n* Attempt to parse a rough JS expression into a Sift / Mongo compatible expression\n* This makes future calls to $macgyver.utils.evalMatch() much quicker\n* TODO: This probably needs replacing / merging with [sift-shorthand](https://github.com/hash-bang/sift-shorthand) at some point\n* @param {Object|string} expression Input expression, if this is an object it is assumed to already be a sift expression and returned uneffected\n* @param {boolean} [asFunc=true] Return a Sift filtering function (the most efficient method), if falsy return the compiled object (useful for debugging)\n* @returns {Sift} Sift function for use with $macgyver.utils.evalMatch()\n*/\n\n\n$macgyver.utils.evalCompile = function (expression) {\n  var asFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var match;\n\n  if (lodash__WEBPACK_IMPORTED_MODULE_0__.isFunction(expression)) {\n    // Already compiled Sift function\n    if (!asFunc) throw new Error('Cannot convert compiled Sift object back to an object - disable asFunc parameter');\n    return expression;\n  } else if (lodash__WEBPACK_IMPORTED_MODULE_0__.isPlainObject(expression)) {\n    // An object but not as Sift function\n    return asFunc ? (0,sift__WEBPACK_IMPORTED_MODULE_1__.default)(expression) : expression;\n  } else if (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(expression) && (match = /*#__PURE__*/_wrapRegExp(/^[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*([\\.0-9A-Z_a-z]+)([\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*==?[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*!=[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*<=?[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*>=?[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+\\$lte?[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+\\$gte?[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]+)(.+)[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*$/, {\n    left: 1,\n    operand: 2,\n    right: 3\n  }).exec(expression))) {\n    // Simple direct (in)equality e.g. `a == 1', `b != 'this'`\n    match.groups.operand = match.groups.operand.trim();\n\n    if (isFinite(match.groups.right)) {\n      match.groups.right = +match.groups.right;\n    } else if (/^([\"']).*\\1$/.test(match.groups.right)) {\n      // Enclosed in \" or '\n      match.groups.right = match.groups.right.substr(1, match.groups.right.length - 2);\n    } // Convert string to boolean\n\n\n    if (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(match.groups.right) && match.groups.right.toLowerCase() === 'true') match.groups.right = true;\n    if (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(match.groups.right) && match.groups.right.toLowerCase() === 'false') match.groups.right = false;\n    var obj;\n\n    if (['=', '==', '$eq'].includes(match.groups.operand)) {\n      // Direct equality\n      obj = _defineProperty({}, match.groups.left, match.groups.right);\n    } else {\n      var siftOperand = ['!=', '$ne'].includes(match.groups.operand) ? '$ne' : ['>', '$gt'].includes(match.groups.operand) ? '$gt' : ['<', '$lt'].includes(match.groups.operand) ? '$lt' : ['>=', '$gte'].includes(match.groups.operand) ? '$gte' : ['<=', '$lte'].includes(match.groups.operand) ? '$lte' : function (e) {\n        throw e;\n      }(new Error(\"Unknown operand \\\"\".concat(match.groups.operand, \"\\\" while parsing expression \\\"\").concat(expression, \"\\\"\")));\n      obj = _defineProperty({}, match.groups.left, _defineProperty({}, siftOperand, match.groups.right));\n    }\n\n    return asFunc ? (0,sift__WEBPACK_IMPORTED_MODULE_1__.default)(obj) : obj;\n  } else {\n    throw new Error(\"Error parsinng expression \\\"\".concat(expression, \"\\\", $macgyver.utils.evalCompile() can only process simple expressions for now, use Sift object syntax for more complex tests\"));\n  }\n};\n/**\n* Evaluate an expression and return if it matches the given environment\n* This function is used by the `showIf` parameter to determine field visibility\n* NOTE: Passing a string to this function is possible but its better to precompile the expression via $macgyver.utils.evalCompile() first so its quicker to process each time\n* @param {string|Object|Sift} expression String expression (which will be parsed), object (which will be parsed) or Sift object to filter by in asending order of efficiency\n* @param {Object} env Local environment to compare\n*/\n\n\n$macgyver.utils.evalMatch = function (expression, env) {\n  return [env].filter($macgyver.utils.evalCompile(expression)).length == 1;\n};\n/**\n* Set a dotted notation or array path to a set value\n* This function will correctly populate any missing entities, calling vm.$set on each traversal of the path\n* Passing undefined as a value removes the key (unless removeUndefined is set to false)\n* *\n* @param {Object} [target] The target to set the path of, if omitted the `vm` object is used as the base for traversal\n* @param {string|array} path The path to set within the target / vm\n* @param {*} value The value to set\n* @param {Object} [options] Additional options\n* @param {boolean} [options.arrayNumeric=true] Process numeric path segments as arrays\n* @param {boolean} [options.removeUndefined=true] If undefined is specified as a value the key is removed instead of being set\n* @param {boolean} [options.debug=false] Also print out debugging information when setting the value\n* @returns {Object} The set value, like $set()\n*\n* @example Set a deeply nested path within a target object\n* $macgyver.utils.setPath(this, 'foo.bar.baz', 123); // this.$data.foo.bar.baz = 123\n*\n* @example Set a deeply nested path, with arrays, assuming VM as the root node\n* $macgyver.utils.setPath('foo.1.bar', 123); // vm.$data.foo = [{bar: 123}]\n*/\n// FIXME: Duplication. Both this and \"vue-setpath\" should depend on a parent \"setpath\" package.\n\n\n$macgyver.utils.setPath = function (target, path, value, options) {\n  // Argument mangling {{{\n  if (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(target) || lodash__WEBPACK_IMPORTED_MODULE_0__.isArray(target) || value === undefined) {\n    // called as (path, value)\n    var _ref3 = [_this2, target, path, value];\n    target = _ref3[0];\n    path = _ref3[1];\n    value = _ref3[2];\n    options = _ref3[3];\n  } else if (!lodash__WEBPACK_IMPORTED_MODULE_0__.isObject(target)) {\n    throw new Error('Cannot use $setPath on non-object target');\n  } // }}}\n\n\n  var settings = _objectSpread({\n    arrayNumeric: true,\n    debug: false,\n    removeUndefined: true\n  }, options);\n\n  if (settings.debug) console.debug('[$setPath]', path, '=', value, {\n    target: target,\n    options: options\n  });\n  var node = target;\n  if (!path) throw new Error('Cannot $setPath with undefined path');\n  (lodash__WEBPACK_IMPORTED_MODULE_0__.isString(path) ? path.split('.') : path).some(function (chunk, chunkIndex, chunks) {\n    if (chunkIndex == chunks.length - 1) {\n      // Leaf node\n      if (settings.removeUndefined && value === undefined) {\n        $macgyver.utils.unset(node, chunk);\n      } else {\n        $macgyver.utils.set(node, chunk, value);\n      }\n    } else if (node[chunk] === undefined) {\n      // This chunk (and all following chunks) does't exist - populate from here\n      chunks.slice(chunkIndex, chunks.length - 1).forEach(function (chunk) {\n        if (settings.arrayNumeric && isFinite(chunk)) {\n          $macgyver.utils.set(node, chunk, []);\n        } else {\n          $macgyver.utils.set(node, chunk, {});\n        }\n\n        node = node[chunk];\n      });\n      $macgyver.utils.set(node, chunks[chunks.length - 1], value);\n      return true;\n    } else {\n      node = node[chunk];\n      return false;\n    }\n  });\n  return value;\n};\n/**\n* Mapping around Vue.set (if its available) or simple key/val setting\n* @param {Object} target The target object to mutate\n* @param {string} key The key to set\n* @param {*} val The value to set\n* @returns {*} The set value\n*/\n\n\n$macgyver.utils.set = $macgyver.utils.global.Vue ? Vue.set : function (target, key, val) {\n  return target[key] = val;\n};\n/**\n* Mapping around Vue.unset (if its available) or simple key delettion\n* @param {Object} target The target object to mutate\n* @param {string} key The key to remove\n*/\n\n$macgyver.utils.unset = $macgyver.utils.global.Vue ? Vue.unset : function (target, key) {\n  delete target[key];\n};\n/**\n* Provides a function to quickly get a data path on a Vue component by its path\n* This function is designed to work as simillaly as possible to _.get()\n* @param {Object} target The source object, usually the root controller\n* @param {string|array} path Either a path in dotted or array notation\n* @param {*} [fallback=undefined] Optional fallback to return if no value is found\n* @returns {*} Either the found value or the fallback\n*/\n\n$macgyver.utils.getPath = function (target, path, fallback) {\n  return lodash__WEBPACK_IMPORTED_MODULE_0__.get(target, path, fallback);\n};\n/**\n* Attempt to increment a string ID\n* This is usually used when we have a base ID and want to duplicate the widget\n* If ID is blank, blank is returned (assumes base parent also has no ID)\n* @param {string} str The string to increment\n* @returns {string} An incremented version of str\n*/\n\n\n$macgyver.utils.incrementId = function (str) {\n  if (!str) {\n    return str;\n  } else if (/[0-9]$/.test(str)) {\n    // Ends in a number\n    var extracted = /*#__PURE__*/_wrapRegExp(/^(.*)([0-9]+)$/, {\n      prefix: 1,\n      numeric: 2\n    }).exec(str); // Extract numeric suffix\n\n\n    return extracted.groups.prefix + (parseInt(extracted.groups.prefix) + 1);\n  } else {\n    // No idea - just append '2'\n    return str + '2';\n  }\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ($macgyver);\n\n//# sourceURL=webpack://@momsfriendlydevco/macgyver/./src/macgyver.js?");

/***/ }),

/***/ "./node_modules/sift/es5m/core.js":
/*!****************************************!*\
  !*** ./node_modules/sift/es5m/core.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseOperation\": () => (/* binding */ BaseOperation),\n/* harmony export */   \"GroupOperation\": () => (/* binding */ GroupOperation),\n/* harmony export */   \"QueryOperation\": () => (/* binding */ QueryOperation),\n/* harmony export */   \"NestedOperation\": () => (/* binding */ NestedOperation),\n/* harmony export */   \"createTester\": () => (/* binding */ createTester),\n/* harmony export */   \"EqualsOperation\": () => (/* binding */ EqualsOperation),\n/* harmony export */   \"createEqualsOperation\": () => (/* binding */ createEqualsOperation),\n/* harmony export */   \"NopeOperation\": () => (/* binding */ NopeOperation),\n/* harmony export */   \"numericalOperationCreator\": () => (/* binding */ numericalOperationCreator),\n/* harmony export */   \"numericalOperation\": () => (/* binding */ numericalOperation),\n/* harmony export */   \"createQueryOperation\": () => (/* binding */ createQueryOperation),\n/* harmony export */   \"createQueryTester\": () => (/* binding */ createQueryTester)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/sift/es5m/utils.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n\n/**\n * Walks through each value given the context - used for nested operations. E.g:\n * { \"person.address\": { $eq: \"blarg\" }}\n */\nvar walkKeyPathValues = function (item, keyPath, next, depth, key, owner) {\n    var currentKey = keyPath[depth];\n    // if array, then try matching. Might fall through for cases like:\n    // { $eq: [1, 2, 3] }, [ 1, 2, 3 ].\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_0__.isArray)(item) && isNaN(Number(currentKey))) {\n        for (var i = 0, length_1 = item.length; i < length_1; i++) {\n            // if FALSE is returned, then terminate walker. For operations, this simply\n            // means that the search critera was met.\n            if (!walkKeyPathValues(item[i], keyPath, next, depth, i, item)) {\n                return false;\n            }\n        }\n    }\n    if (depth === keyPath.length || item == null) {\n        return next(item, key, owner);\n    }\n    return walkKeyPathValues(item[currentKey], keyPath, next, depth + 1, currentKey, item);\n};\nvar BaseOperation = /** @class */ (function () {\n    function BaseOperation(params, owneryQuery, options) {\n        this.params = params;\n        this.owneryQuery = owneryQuery;\n        this.options = options;\n        this.init();\n    }\n    BaseOperation.prototype.init = function () { };\n    BaseOperation.prototype.reset = function () {\n        this.done = false;\n        this.success = false;\n    };\n    return BaseOperation;\n}());\n\nvar GroupOperation = /** @class */ (function (_super) {\n    __extends(GroupOperation, _super);\n    function GroupOperation(params, owneryQuery, options, _children) {\n        var _this = _super.call(this, params, owneryQuery, options) || this;\n        _this._children = _children;\n        return _this;\n    }\n    /**\n     */\n    GroupOperation.prototype.reset = function () {\n        this.success = false;\n        this.done = false;\n        for (var i = 0, length_2 = this._children.length; i < length_2; i++) {\n            this._children[i].reset();\n        }\n    };\n    /**\n     */\n    GroupOperation.prototype.childrenNext = function (item, key, owner) {\n        var done = true;\n        var success = true;\n        for (var i = 0, length_3 = this._children.length; i < length_3; i++) {\n            var childOperation = this._children[i];\n            childOperation.next(item, key, owner);\n            if (!childOperation.success) {\n                success = false;\n            }\n            if (childOperation.done) {\n                if (!childOperation.success) {\n                    break;\n                }\n            }\n            else {\n                done = false;\n            }\n        }\n        this.done = done;\n        this.success = success;\n    };\n    return GroupOperation;\n}(BaseOperation));\n\nvar QueryOperation = /** @class */ (function (_super) {\n    __extends(QueryOperation, _super);\n    function QueryOperation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     */\n    QueryOperation.prototype.next = function (item, key, parent) {\n        this.childrenNext(item, key, parent);\n    };\n    return QueryOperation;\n}(GroupOperation));\n\nvar NestedOperation = /** @class */ (function (_super) {\n    __extends(NestedOperation, _super);\n    function NestedOperation(keyPath, params, owneryQuery, options, children) {\n        var _this = _super.call(this, params, owneryQuery, options, children) || this;\n        _this.keyPath = keyPath;\n        /**\n         */\n        _this._nextNestedValue = function (value, key, owner) {\n            _this.childrenNext(value, key, owner);\n            return !_this.done;\n        };\n        return _this;\n    }\n    /**\n     */\n    NestedOperation.prototype.next = function (item, key, parent) {\n        walkKeyPathValues(item, this.keyPath, this._nextNestedValue, 0, key, parent);\n    };\n    return NestedOperation;\n}(GroupOperation));\n\nvar createTester = function (a, compare) {\n    if (a instanceof Function) {\n        return a;\n    }\n    if (a instanceof RegExp) {\n        return function (b) { return typeof b === \"string\" && a.test(b); };\n    }\n    var comparableA = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.comparable)(a);\n    return function (b) { return compare(comparableA, (0,_utils__WEBPACK_IMPORTED_MODULE_0__.comparable)(b)); };\n};\nvar EqualsOperation = /** @class */ (function (_super) {\n    __extends(EqualsOperation, _super);\n    function EqualsOperation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EqualsOperation.prototype.init = function () {\n        this._test = createTester(this.params, this.options.compare);\n    };\n    EqualsOperation.prototype.next = function (item, key, parent) {\n        if (this._test(item, key, parent)) {\n            this.done = true;\n            this.success = true;\n        }\n    };\n    return EqualsOperation;\n}(BaseOperation));\n\nvar createEqualsOperation = function (params, owneryQuery, options) { return new EqualsOperation(params, owneryQuery, options); };\nvar NopeOperation = /** @class */ (function (_super) {\n    __extends(NopeOperation, _super);\n    function NopeOperation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NopeOperation.prototype.next = function () {\n        this.done = true;\n        this.success = false;\n    };\n    return NopeOperation;\n}(BaseOperation));\n\nvar numericalOperationCreator = function (createNumericalOperation) { return function (params, owneryQuery, options) {\n    if (params == null) {\n        return new NopeOperation(params, owneryQuery, options);\n    }\n    return createNumericalOperation(params, owneryQuery, options);\n}; };\nvar numericalOperation = function (createTester) {\n    return numericalOperationCreator(function (params, owneryQuery, options) {\n        var typeofParams = typeof (0,_utils__WEBPACK_IMPORTED_MODULE_0__.comparable)(params);\n        var test = createTester(params);\n        return new EqualsOperation(function (b) {\n            return typeof (0,_utils__WEBPACK_IMPORTED_MODULE_0__.comparable)(b) === typeofParams && test(b);\n        }, owneryQuery, options);\n    });\n};\nvar createOperation = function (name, params, parentQuery, options) {\n    var operationCreator = options.operations[name];\n    if (!operationCreator) {\n        throw new Error(\"Unsupported operation: \" + name);\n    }\n    return operationCreator(params, parentQuery, options);\n};\nvar containsOperation = function (query) {\n    for (var key in query) {\n        if (key.charAt(0) === \"$\")\n            return true;\n    }\n    return false;\n};\nvar createNestedOperation = function (keyPath, nestedQuery, owneryQuery, options) {\n    if (containsOperation(nestedQuery)) {\n        var _a = createQueryOperations(nestedQuery, options), selfOperations = _a[0], nestedOperations = _a[1];\n        if (nestedOperations.length) {\n            throw new Error(\"Property queries must contain only operations, or exact objects.\");\n        }\n        return new NestedOperation(keyPath, nestedQuery, owneryQuery, options, selfOperations);\n    }\n    return new NestedOperation(keyPath, nestedQuery, owneryQuery, options, [\n        new EqualsOperation(nestedQuery, owneryQuery, options)\n    ]);\n};\nvar createQueryOperation = function (query, owneryQuery, options) {\n    var _a = createQueryOperations(query, options), selfOperations = _a[0], nestedOperations = _a[1];\n    var ops = __spreadArrays([\n        new NestedOperation([], query, owneryQuery, options, selfOperations)\n    ], nestedOperations);\n    if (ops.length === 1) {\n        return ops[0];\n    }\n    return new QueryOperation(query, owneryQuery, options, ops);\n};\nvar createQueryOperations = function (query, options) {\n    var selfOperations = [];\n    var nestedOperations = [];\n    if (!(0,_utils__WEBPACK_IMPORTED_MODULE_0__.isVanillaObject)(query)) {\n        selfOperations.push(new EqualsOperation(query, query, options));\n        return [selfOperations, nestedOperations];\n    }\n    for (var key in query) {\n        if (key.charAt(0) === \"$\") {\n            var op = createOperation(key, query[key], query, options);\n            // probably just a flag for another operation (like $options)\n            if (op != null) {\n                selfOperations.push(op);\n            }\n        }\n        else {\n            nestedOperations.push(createNestedOperation(key.split(\".\"), query[key], query, options));\n        }\n    }\n    return [selfOperations, nestedOperations];\n};\nvar createQueryTester = function (query, _a) {\n    var _b = _a === void 0 ? {} : _a, compare = _b.compare, operations = _b.operations;\n    var operation = createQueryOperation(query, null, {\n        compare: compare || _utils__WEBPACK_IMPORTED_MODULE_0__.equals,\n        operations: Object.assign({}, operations || {})\n    });\n    return function (item, key, owner) {\n        operation.reset();\n        operation.next(item, key, owner);\n        return operation.success;\n    };\n};\n\n\n//# sourceURL=webpack://@momsfriendlydevco/macgyver/./node_modules/sift/es5m/core.js?");

/***/ }),

/***/ "./node_modules/sift/es5m/index.js":
/*!*****************************************!*\
  !*** ./node_modules/sift/es5m/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EqualsOperation\": () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation),\n/* harmony export */   \"createQueryTester\": () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.createQueryTester),\n/* harmony export */   \"createEqualsOperation\": () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.createEqualsOperation),\n/* harmony export */   \"$all\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$all),\n/* harmony export */   \"$and\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$and),\n/* harmony export */   \"$elemMatch\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$elemMatch),\n/* harmony export */   \"$eq\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$eq),\n/* harmony export */   \"$exists\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$exists),\n/* harmony export */   \"$gt\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$gt),\n/* harmony export */   \"$gte\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$gte),\n/* harmony export */   \"$in\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$in),\n/* harmony export */   \"$lt\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$lt),\n/* harmony export */   \"$lte\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$lte),\n/* harmony export */   \"$mod\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$mod),\n/* harmony export */   \"$ne\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$ne),\n/* harmony export */   \"$nin\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$nin),\n/* harmony export */   \"$nor\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$nor),\n/* harmony export */   \"$not\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$not),\n/* harmony export */   \"$options\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$options),\n/* harmony export */   \"$or\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$or),\n/* harmony export */   \"$regex\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$regex),\n/* harmony export */   \"$size\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$size),\n/* harmony export */   \"$type\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$type),\n/* harmony export */   \"$where\": () => (/* reexport safe */ _operations__WEBPACK_IMPORTED_MODULE_1__.$where),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _operations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operations */ \"./node_modules/sift/es5m/operations.js\");\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ \"./node_modules/sift/es5m/core.js\");\n\n\nvar createDefaultQueryTester = function (query, _a) {\n    var _b = _a === void 0 ? {} : _a, compare = _b.compare, operations = _b.operations;\n    return (0,_core__WEBPACK_IMPORTED_MODULE_0__.createQueryTester)(query, {\n        compare: compare,\n        operations: Object.assign({}, _operations__WEBPACK_IMPORTED_MODULE_1__, operations)\n    });\n};\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createDefaultQueryTester);\n\n\n//# sourceURL=webpack://@momsfriendlydevco/macgyver/./node_modules/sift/es5m/index.js?");

/***/ }),

/***/ "./node_modules/sift/es5m/operations.js":
/*!**********************************************!*\
  !*** ./node_modules/sift/es5m/operations.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"$eq\": () => (/* binding */ $eq),\n/* harmony export */   \"$ne\": () => (/* binding */ $ne),\n/* harmony export */   \"$or\": () => (/* binding */ $or),\n/* harmony export */   \"$nor\": () => (/* binding */ $nor),\n/* harmony export */   \"$elemMatch\": () => (/* binding */ $elemMatch),\n/* harmony export */   \"$nin\": () => (/* binding */ $nin),\n/* harmony export */   \"$in\": () => (/* binding */ $in),\n/* harmony export */   \"$lt\": () => (/* binding */ $lt),\n/* harmony export */   \"$lte\": () => (/* binding */ $lte),\n/* harmony export */   \"$gt\": () => (/* binding */ $gt),\n/* harmony export */   \"$gte\": () => (/* binding */ $gte),\n/* harmony export */   \"$mod\": () => (/* binding */ $mod),\n/* harmony export */   \"$exists\": () => (/* binding */ $exists),\n/* harmony export */   \"$regex\": () => (/* binding */ $regex),\n/* harmony export */   \"$not\": () => (/* binding */ $not),\n/* harmony export */   \"$type\": () => (/* binding */ $type),\n/* harmony export */   \"$and\": () => (/* binding */ $and),\n/* harmony export */   \"$all\": () => (/* binding */ $all),\n/* harmony export */   \"$size\": () => (/* binding */ $size),\n/* harmony export */   \"$options\": () => (/* binding */ $options),\n/* harmony export */   \"$where\": () => (/* binding */ $where)\n/* harmony export */ });\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ \"./node_modules/sift/es5m/core.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/sift/es5m/utils.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar $Ne = /** @class */ (function (_super) {\n    __extends($Ne, _super);\n    function $Ne() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    $Ne.prototype.init = function () {\n        this._test = (0,_core__WEBPACK_IMPORTED_MODULE_0__.createTester)(this.params, this.options.compare);\n    };\n    $Ne.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this.success = true;\n    };\n    $Ne.prototype.next = function (item) {\n        if (this._test(item)) {\n            this.done = true;\n            this.success = false;\n        }\n    };\n    return $Ne;\n}(_core__WEBPACK_IMPORTED_MODULE_0__.BaseOperation));\nvar $ElemMatch = /** @class */ (function (_super) {\n    __extends($ElemMatch, _super);\n    function $ElemMatch() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    $ElemMatch.prototype.init = function () {\n        this._queryOperation = (0,_core__WEBPACK_IMPORTED_MODULE_0__.createQueryOperation)(this.params, this.owneryQuery, this.options);\n    };\n    $ElemMatch.prototype.reset = function () {\n        this._queryOperation.reset();\n    };\n    $ElemMatch.prototype.next = function (item, key, owner) {\n        this._queryOperation.next(item, key, owner);\n        this.done = this._queryOperation.done;\n        this.success = this._queryOperation.success;\n    };\n    return $ElemMatch;\n}(_core__WEBPACK_IMPORTED_MODULE_0__.BaseOperation));\nvar $Not = /** @class */ (function (_super) {\n    __extends($Not, _super);\n    function $Not() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    $Not.prototype.next = function (item, key, owner) {\n        _super.prototype.next.call(this, item, key, owner);\n        this.success = !this.success;\n    };\n    return $Not;\n}($ElemMatch));\nvar $Or = /** @class */ (function (_super) {\n    __extends($Or, _super);\n    function $Or() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    $Or.prototype.init = function () {\n        var _this = this;\n        this._ops = this.params.map(function (op) {\n            return (0,_core__WEBPACK_IMPORTED_MODULE_0__.createQueryOperation)(op, null, _this.options);\n        });\n    };\n    $Or.prototype.reset = function () {\n        this.done = false;\n        this.success = false;\n        for (var i = 0, length_1 = this._ops.length; i < length_1; i++) {\n            this._ops[i].reset();\n        }\n    };\n    $Or.prototype.next = function (item, key, owner) {\n        var done = false;\n        var success = false;\n        for (var i = 0, length_2 = this._ops.length; i < length_2; i++) {\n            var op = this._ops[i];\n            op.next(item, key, owner);\n            if (op.success) {\n                done = true;\n                success = op.success;\n                break;\n            }\n        }\n        this.success = success;\n        this.done = done;\n    };\n    return $Or;\n}(_core__WEBPACK_IMPORTED_MODULE_0__.BaseOperation));\nvar $Nor = /** @class */ (function (_super) {\n    __extends($Nor, _super);\n    function $Nor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    $Nor.prototype.next = function (item, key, owner) {\n        _super.prototype.next.call(this, item, key, owner);\n        this.success = !this.success;\n    };\n    return $Nor;\n}($Or));\nvar $Exists = /** @class */ (function (_super) {\n    __extends($Exists, _super);\n    function $Exists() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    $Exists.prototype.next = function (item, key, owner) {\n        if (owner.hasOwnProperty(key) === this.params) {\n            this.done = true;\n            this.success = true;\n        }\n    };\n    return $Exists;\n}(_core__WEBPACK_IMPORTED_MODULE_0__.BaseOperation));\nvar $And = /** @class */ (function (_super) {\n    __extends($And, _super);\n    function $And(params, owneryQuery, options) {\n        return _super.call(this, params, owneryQuery, options, params.map(function (query) { return (0,_core__WEBPACK_IMPORTED_MODULE_0__.createQueryOperation)(query, owneryQuery, options); })) || this;\n    }\n    $And.prototype.next = function (item, key, owner) {\n        this.childrenNext(item, key, owner);\n    };\n    return $And;\n}(_core__WEBPACK_IMPORTED_MODULE_0__.GroupOperation));\nvar $eq = function (params, owneryQuery, options) {\n    return new _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation(params, owneryQuery, options);\n};\nvar $ne = function (params, owneryQuery, options) {\n    return new $Ne(params, owneryQuery, options);\n};\nvar $or = function (params, owneryQuery, options) {\n    return new $Or(params, owneryQuery, options);\n};\nvar $nor = function (params, owneryQuery, options) {\n    return new $Nor(params, owneryQuery, options);\n};\nvar $elemMatch = function (params, owneryQuery, options) {\n    return new $ElemMatch(params, owneryQuery, options);\n};\nvar $nin = function (params, owneryQuery, options) {\n    return new $Nor(params, owneryQuery, options);\n};\nvar $in = function (params, owneryQuery, options) {\n    return new $Or(params, owneryQuery, options);\n};\nvar $lt = (0,_core__WEBPACK_IMPORTED_MODULE_0__.numericalOperation)(function (params) { return function (b) { return b < params; }; });\nvar $lte = (0,_core__WEBPACK_IMPORTED_MODULE_0__.numericalOperation)(function (params) { return function (b) { return b <= params; }; });\nvar $gt = (0,_core__WEBPACK_IMPORTED_MODULE_0__.numericalOperation)(function (params) { return function (b) { return b > params; }; });\nvar $gte = (0,_core__WEBPACK_IMPORTED_MODULE_0__.numericalOperation)(function (params) { return function (b) { return b >= params; }; });\nvar $mod = function (_a, owneryQuery, options) {\n    var mod = _a[0], equalsValue = _a[1];\n    return new _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation(function (b) { return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.comparable)(b) % mod === equalsValue; }, owneryQuery, options);\n};\nvar $exists = function (params, owneryQuery, options) { return new $Exists(params, owneryQuery, options); };\nvar $regex = function (pattern, owneryQuery, options) {\n    return new _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation(new RegExp(pattern, owneryQuery.$options), owneryQuery, options);\n};\nvar $not = function (params, owneryQuery, options) {\n    return new $Not(params, owneryQuery, options);\n};\nvar $type = function (clazz, owneryQuery, options) {\n    return new _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation(function (b) { return (b != null ? b instanceof clazz || b.constructor === clazz : false); }, owneryQuery, options);\n};\nvar $and = function (params, ownerQuery, options) {\n    return new $And(params, ownerQuery, options);\n};\nvar $all = $and;\nvar $size = function (params, ownerQuery, options) {\n    return new _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation(function (b) { return b && b.length === params; }, ownerQuery, options);\n};\nvar $options = function () { return null; };\nvar $where = function (params, ownerQuery, options) {\n    var test;\n    if ((0,_utils__WEBPACK_IMPORTED_MODULE_1__.isFunction)(params)) {\n        test = params;\n    }\n    else if (!process.env.CSP_ENABLED) {\n        test = new Function(\"obj\", \"return \" + params);\n    }\n    else {\n        throw new Error(\"In CSP mode, sift does not support strings in \\\"$where\\\" condition\");\n    }\n    return new _core__WEBPACK_IMPORTED_MODULE_0__.EqualsOperation(function (b) { return test.bind(b)(b); }, ownerQuery, options);\n};\n\n\n//# sourceURL=webpack://@momsfriendlydevco/macgyver/./node_modules/sift/es5m/operations.js?");

/***/ }),

/***/ "./node_modules/sift/es5m/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/sift/es5m/utils.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"typeChecker\": () => (/* binding */ typeChecker),\n/* harmony export */   \"comparable\": () => (/* binding */ comparable),\n/* harmony export */   \"isArray\": () => (/* binding */ isArray),\n/* harmony export */   \"isObject\": () => (/* binding */ isObject),\n/* harmony export */   \"isFunction\": () => (/* binding */ isFunction),\n/* harmony export */   \"isVanillaObject\": () => (/* binding */ isVanillaObject),\n/* harmony export */   \"equals\": () => (/* binding */ equals)\n/* harmony export */ });\nvar typeChecker = function (type) {\n    var typeString = \"[object \" + type + \"]\";\n    return function (value) {\n        return getClassName(value) === typeString;\n    };\n};\nvar getClassName = function (value) { return Object.prototype.toString.call(value); };\nvar comparable = function (value) {\n    if (value instanceof Date) {\n        return value.getTime();\n    }\n    else if (isArray(value)) {\n        return value.map(comparable);\n    }\n    else if (value && typeof value.toJSON === \"function\") {\n        return value.toJSON();\n    }\n    return value;\n};\nvar isArray = typeChecker(\"Array\");\nvar isObject = typeChecker(\"Object\");\nvar isFunction = typeChecker(\"Function\");\nvar isVanillaObject = function (value) {\n    return (value &&\n        (value.constructor === Object ||\n            value.constructor === Array ||\n            value.constructor.toString() === \"function Object() { [native code] }\" ||\n            value.constructor.toString() === \"function Array() { [native code] }\") &&\n        !value.toJSON);\n};\nvar equals = function (a, b) {\n    if (a == null && a == b) {\n        return true;\n    }\n    if (a === b) {\n        return true;\n    }\n    if (Object.prototype.toString.call(a) !== Object.prototype.toString.call(b)) {\n        return false;\n    }\n    if (isArray(a)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, length_1 = a.length; i < length_1; i++) {\n            if (!equals(a[i], b[i]))\n                return false;\n        }\n        return true;\n    }\n    else if (isObject(a)) {\n        if (Object.keys(a).length !== Object.keys(b).length) {\n            return false;\n        }\n        for (var key in a) {\n            if (!equals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return false;\n};\n\n\n//# sourceURL=webpack://@momsfriendlydevco/macgyver/./node_modules/sift/es5m/utils.js?");

/***/ }),

/***/ "lodash":
/*!*************************************************************************************!*\
  !*** external {"commonjs":"lodash","commonjs2":"lodash","amd":"lodash","root":"_"} ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	// It's empty as some runtime module handles the default behavior
/******/ 	__webpack_require__.x = x => {};
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// Promise = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"macgyver": 0
/******/ 		};
/******/ 		
/******/ 		var deferredModules = [
/******/ 			["./src/macgyver.js"]
/******/ 		];
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		var checkDeferredModules = x => {};
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime, executeModules] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0, resolves = [];
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					resolves.push(installedChunks[chunkId][0]);
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			while(resolves.length) {
/******/ 				resolves.shift()();
/******/ 			}
/******/ 		
/******/ 			// add entry modules from loaded chunk to deferred list
/******/ 			if(executeModules) deferredModules.push.apply(deferredModules, executeModules);
/******/ 		
/******/ 			// run deferred modules when all chunks ready
/******/ 			return checkDeferredModules();
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = this["webpackChunk_momsfriendlydevco_macgyver"] = this["webpackChunk_momsfriendlydevco_macgyver"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 		
/******/ 		function checkDeferredModulesImpl() {
/******/ 			var result;
/******/ 			for(var i = 0; i < deferredModules.length; i++) {
/******/ 				var deferredModule = deferredModules[i];
/******/ 				var fulfilled = true;
/******/ 				for(var j = 1; j < deferredModule.length; j++) {
/******/ 					var depId = deferredModule[j];
/******/ 					if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferredModules.splice(i--, 1);
/******/ 					result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 				}
/******/ 			}
/******/ 			if(deferredModules.length === 0) {
/******/ 				__webpack_require__.x();
/******/ 				__webpack_require__.x = x => {};
/******/ 			}
/******/ 			return result;
/******/ 		}
/******/ 		var startup = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			// reset startup function so it can be called again when more startup code is added
/******/ 			__webpack_require__.x = startup || (x => {});
/******/ 			return (checkDeferredModules = checkDeferredModulesImpl)();
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});